{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\dlaza\\\\Desktop\\\\interview project\\\\company-teams-management\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\dlaza\\\\Desktop\\\\interview project\\\\company-teams-management\\\\src\\\\App.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n//import { spawn } from 'child_process';\n\nvar App = function App() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    country = _useState4[0],\n    setCountry = _useState4[1];\n  var handleChangeName = function handleChangeName(e) {\n    setValue(e.target.value);\n  };\n  var handleChangeCountry = function handleChangeCountry(e) {\n    setCountry(e.target.value);\n  };\n  var handleSave = function handleSave() {\n    axios.post(\"http://localhost:4000/companies\", {\n      name: value,\n      country: country\n    }).then(function (res) {\n      if (res.status === 200) {\n        alert(\"success\");\n      }\n    }).catch(function (err) {\n      alert(\"error\");\n    });\n  };\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    salaries = _useState6[0],\n    setSelary = _useState6[1];\n  useEffect(function () {\n    axios.get(\"http://localhost:4000/avg-salary\").then(function (res) {\n      if (res.status === 200) {\n        setSelary(res.data);\n      }\n    });\n  }, []);\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    years = _useState8[0],\n    setYears = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    enterCountry = _useState10[0],\n    setEnterCountry = _useState10[1];\n  var handleChangeYears = function handleChangeYears(e) {\n    setYears(e.target.value);\n  };\n  var handleChangeEnterCountry = function handleChangeEnterCountry(e) {\n    setEnterCountry(e.target.value);\n  };\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    filterEmp = _useState12[0],\n    setFilterEmp = _useState12[1];\n  var handleFilter = function handleFilter() {\n    axios.get(\"http://localhost:4000/filter-employees?years=\".concat(years, \"&country=\").concat(enterCountry)).then(function (res) {\n      if (res.status === 200) {\n        setFilterEmp(res.data);\n      }\n    });\n  };\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    teamName = _useState14[0],\n    setTeamName = _useState14[1];\n  var handleChangeTeam = function handleChangeTeam(e) {\n    setTeamName(e.target.value);\n  };\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    getTeam = _useState16[0],\n    setGetTeam = _useState16[1];\n  var handleTeam = function handleTeam() {\n    axios.get(\"http://localhost:4000/team-info?team=\".concat(teamName)).then(function (res) {\n      if (res.status === 200) {\n        setGetTeam(res.data);\n      }\n    });\n  };\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    companyName = _useState18[0],\n    setCompanyName = _useState18[1];\n  var handleChangeCompanyName = function handleChangeCompanyName(e) {\n    setCompanyName(e.target.value);\n  };\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    getCompany = _useState20[0],\n    setGetCompany = _useState20[1];\n  var handleCompany = function handleCompany() {\n    axios.get(\"http://localhost:4000/companies/employees?company=\".concat(companyName)).then(function (res) {\n      if (res.status === 200) {\n        setGetCompany(res.data);\n      }\n    }).catch(function (err) {\n      return alert('error updating');\n    });\n  };\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    searchCompany = _useState22[0],\n    setSearchCompany = _useState22[1];\n  var handleChangeSearch = function handleChangeSearch(e) {\n    setSearchCompany(e.target.value);\n  };\n  var _useState23 = useState([]),\n    _useState24 = _slicedToArray(_useState23, 2),\n    getSerachedCompany = _useState24[0],\n    setGetSearchCompany = _useState24[1];\n  var handleCompanySearch = function handleCompanySearch() {\n    axios.get(\"http://localhost:4000/companies?companyName=\".concat(searchCompany)).then(function (res) {\n      if (res.status === 200) {\n        setGetSearchCompany(res.data);\n      }\n    }).catch(function (err) {\n      alert(\"Company does not exist\");\n    });\n  };\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    companyToUpdate = _useState26[0],\n    setCompanyToUpdate = _useState26[1];\n  var handleCompanyToUpdate = function handleCompanyToUpdate(e) {\n    setCompanyToUpdate(e.target.value);\n  };\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    companyNameToPut = _useState28[0],\n    setNameToPut = _useState28[1];\n  var handleNameToPut = function handleNameToPut(e) {\n    setNameToPut(e.target.value);\n  };\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    countryToPut = _useState30[0],\n    setCountryToPut = _useState30[1];\n  var handleCountryToPut = function handleCountryToPut(e) {\n    setCountryToPut(e.target.value);\n  };\n  var handleCompanyPut = function handleCompanyPut() {\n    axios.put(\"http://localhost:4000/companies\", {\n      companyName: companyToUpdate,\n      name: companyNameToPut,\n      country: countryToPut\n    }).then(function (res) {\n      if (res.status === 200) {\n        alert('success');\n      }\n    }).catch(function (err) {\n      alert('error');\n    });\n  };\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    companyToDelete = _useState32[0],\n    setCompanyToDelete = _useState32[1];\n  var handleCompanyNameToDelete = function handleCompanyNameToDelete(e) {\n    setCompanyToDelete(e.target.value);\n  };\n  var handleCompanyDetele = function handleCompanyDetele() {\n    axios.delete(\"http://localhost:4000/companies?name=\".concat(companyToDelete)).then(function (res) {\n      if (res.status === 200) {\n        alert('success');\n      }\n    }).catch(function (err) {\n      alert('error');\n    });\n  };\n  var _useState33 = useState(''),\n    _useState34 = _slicedToArray(_useState33, 2),\n    getEmpsByCompany = _useState34[0],\n    setGetEmpsByCompany = _useState34[1];\n  var handleEmpsByCompany = function handleEmpsByCompany(e) {\n    setGetEmpsByCompany(e.target.value);\n  };\n  // const handleEmpsSearch=()=>{\n  //   axios.get(`http://localhost:4000/employees?name=${getEmpsByCompany}`)\n  //   .then(res=>{\n  //     if (res.status===200) {\n  //       setGetEmpsByCompany(res.data);\n  //     }\n  //   })\n  // }\n  var _useState35 = useState([]),\n    _useState36 = _slicedToArray(_useState35, 2),\n    dissplayEmps = _useState36[0],\n    setDisplayEpms = _useState36[1];\n  var handleEmpsDisplay = function handleEmpsDisplay() {\n    axios.get(\"http://localhost:4000/employees?name=\".concat(getEmpsByCompany)).then(function (res) {\n      if (res.status === 200) {\n        setDisplayEpms(res.data);\n      }\n    });\n  };\n  var _useState37 = useState(''),\n    _useState38 = _slicedToArray(_useState37, 2),\n    empToDelete = _useState38[0],\n    setEmpToDelete = _useState38[1];\n  var handleDelEmpName = function handleDelEmpName(e) {\n    setEmpToDelete(e.target.value);\n  };\n  var handleEmpDelete = function handleEmpDelete() {\n    axios.delete(\"http://localhost:4000/employees?username=\".concat(empToDelete)).then(function (res) {\n      if (res.status === 200) {\n        alert('success');\n      }\n    }).catch(function (err) {\n      alert('error deleting employee');\n    });\n  };\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    insertEmpPos = _React$useState2[0],\n    setInsertEmpPos = _React$useState2[1];\n  var handleInsEmpPos = function handleInsEmpPos(e) {\n    setInsertEmpPos(parseInt(e.target.value));\n  };\n  var _useState39 = useState(0),\n    _useState40 = _slicedToArray(_useState39, 2),\n    insEmpSalary = _useState40[0],\n    setInsEmpSalary = _useState40[1];\n  var handleInsEmpSal = function handleInsEmpSal(e) {\n    setInsEmpSalary(parseInt(e.target.value));\n  };\n  // const [insStartDate, setInsStartDate] = useState<any>();\n  // const handleInsStartDate = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   setInsStartDate((e.target.value));\n  // }\n  var _useState41 = useState(0),\n    _useState42 = _slicedToArray(_useState41, 2),\n    insTeamId = _useState42[0],\n    setInsTeamId = _useState42[1];\n  var handleInsTeamId = function handleInsTeamId(e) {\n    setInsTeamId(parseInt(e.target.value));\n  };\n  var _useState43 = useState(''),\n    _useState44 = _slicedToArray(_useState43, 2),\n    insFirstName = _useState44[0],\n    setInsFirstName = _useState44[1];\n  var handleInsFirstName = function handleInsFirstName(e) {\n    setInsFirstName(String(e.target.value));\n  };\n  var _useState45 = useState(''),\n    _useState46 = _slicedToArray(_useState45, 2),\n    insLastName = _useState46[0],\n    setInsLastName = _useState46[1];\n  var handleInsLastName = function handleInsLastName(e) {\n    setInsLastName(String(e.target.value));\n  };\n  var _useState47 = useState(''),\n    _useState48 = _slicedToArray(_useState47, 2),\n    insUsername = _useState48[0],\n    setInsUsername = _useState48[1];\n  var handleInsUsername = function handleInsUsername(e) {\n    setInsUsername(String(e.target.value));\n  };\n  var _useState49 = useState(\"\"),\n    _useState50 = _slicedToArray(_useState49, 2),\n    insEmail = _useState50[0],\n    setInsEmail = _useState50[1];\n  var handleInsEmail = function handleInsEmail(e) {\n    setInsEmail(e.target.value);\n  };\n  var _useState51 = useState(0),\n    _useState52 = _slicedToArray(_useState51, 2),\n    insManagerId = _useState52[0],\n    setInsManagerId = _useState52[1];\n  var handleInsManagerId = function handleInsManagerId(e) {\n    setInsManagerId(parseInt(e.target.value));\n  };\n  var handleInsEmployee = function handleInsEmployee() {\n    axios.post(\"http://localhost:4000/employees?position=\".concat(insertEmpPos, \"&salary=\").concat(insEmpSalary, \"&teamId=\").concat(insTeamId, \"&managerId=\").concat(insManagerId), {\n      firstName: insFirstName,\n      lastName: insLastName,\n      username: insUsername,\n      email: insEmail\n    }).then(function (res) {\n      if (res.status === 200) {\n        alert(\" seccess \");\n      }\n    }).catch(function (err) {\n      alert('error insert');\n    });\n  };\n  var _useState53 = useState(''),\n    _useState54 = _slicedToArray(_useState53, 2),\n    companyNameToputEmp = _useState54[0],\n    setCompanyNameToPutEmp = _useState54[1];\n  var handleCompNameToPutEmp = function handleCompNameToPutEmp(e) {\n    setCompanyNameToPutEmp(e.target.value);\n  };\n  var _useState55 = useState(''),\n    _useState56 = _slicedToArray(_useState55, 2),\n    usernameToPutEmp = _useState56[0],\n    setUsernameToPutEmp = _useState56[1];\n  var handeleUsername = function handeleUsername(e) {\n    setUsernameToPutEmp(e.target.value);\n  };\n  var handleEmpPut = function handleEmpPut() {\n    axios.put(\"http://localhost:4000/employees?position=\".concat(insertEmpPos, \"&salary=\").concat(insEmpSalary, \"&teamId=\").concat(insTeamId, \"&managerId=\").concat(insManagerId), {\n      firstName: insFirstName,\n      lastName: insLastName,\n      username: insUsername,\n      email: insEmail,\n      companyName: companyNameToputEmp,\n      oldUsername: usernameToPutEmp\n    }).then(function (res) {\n      if (res.status === 200) {\n        alert('success');\n      }\n    }).then(function (err) {\n      alert('error');\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }, \"Filter employees by country and years in the company\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: enterCountry,\n    onChange: handleChangeEnterCountry,\n    name: \"enterCountry\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }\n  }, \"Years in the company\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: years,\n    onChange: handleChangeYears,\n    name: \"years\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFilter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, \"filter\"), filterEmp.map(function (emp, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, \"This are the employees \", emp.workers, \" from \", emp.country, \" with \", years, \" in the company\");\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, \"Get team and manager by team name\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, \"Enter team name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: teamName,\n    onChange: handleChangeTeam,\n    name: \"teamName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleTeam,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, \"filter\"), getTeam.map(function (team, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \"This is team \", team.team_name, \": \", team.team_mates, \" and its manager with id=\", team.manager_id, \" \");\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, \"Get workers in company with atleast 6 months experiance \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, \"Enter company name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: companyName,\n    onChange: handleChangeCompanyName,\n    name: \"companyName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCompany,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }\n  }, \"Enter\"), getCompany.map(function (company, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, company.emp_count, \" workers:\", company.workers, \" in \", companyName);\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, \"Search if company exists by name \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, \"Enter company name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: searchCompany,\n    onChange: handleChangeSearch,\n    name: \"searchCompany\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCompanySearch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, \"serch\"), getSerachedCompany.map(function (company, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, \" Serch result: id-\", company.id, \", name-\", company.name, \", country-\", company.country, \" \");\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, \"Add company\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, \"Company name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: function onChange(e) {\n      return handleChangeName(e);\n    },\n    name: \"value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: country,\n    onChange: handleChangeCountry,\n    name: \"country\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSave,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }\n  }, \"save\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }\n  }, \"Update Company \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, \"Enter company name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: companyToUpdate,\n    onChange: handleCompanyToUpdate,\n    name: \"companyToUpdate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, \"New name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: companyNameToPut,\n    onChange: handleNameToPut,\n    name: \"companyNameToPut\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }\n  }, \"New country\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: countryToPut,\n    onChange: handleCountryToPut,\n    name: \"countryToPut\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCompanyPut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }, \"update\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }\n  }, \"Delete Company by name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: companyToDelete,\n    onChange: handleCompanyNameToDelete,\n    name: \"companyToDelete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleCompanyDetele,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }, \"View all the the employees in given company \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: getEmpsByCompany,\n    onChange: handleEmpsByCompany,\n    name: \"getEmpsByCompany\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEmpsDisplay,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }, \"view\"), dissplayEmps.map(function (emps, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, emps.employees);\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, \"Updete epmloyee (fill the new data below in Add employees then press Update) \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: companyNameToputEmp,\n    onChange: handleCompNameToPutEmp,\n    name: \"companyNameToputEmp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: usernameToPutEmp,\n    onChange: handeleUsername,\n    name: \"usernameToPutEmp\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEmpPut,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }\n  }, \"Add Employeee\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  }, \"position\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insertEmpPos,\n    onChange: handleInsEmpPos,\n    name: \"insertEmpPos\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }\n  }, \"salary\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insEmpSalary,\n    onChange: handleInsEmpSal,\n    name: \"insEmpSalary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, \"team id\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insTeamId,\n    onChange: handleInsTeamId,\n    name: \"insTeamId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }\n  }, \"First name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insFirstName,\n    onChange: handleInsFirstName,\n    name: \"insFirstName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, \"Last name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insLastName,\n    onChange: handleInsLastName,\n    name: \"insLastName\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, \"userneme\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insUsername,\n    onChange: handleInsUsername,\n    name: \"insUsername\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insEmail,\n    onChange: handleInsEmail,\n    name: \"insEmail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }\n  }, \"Manager id\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: insManagerId,\n    onChange: handleInsManagerId,\n    name: \"insManagerId\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleInsEmployee,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }\n  }, \"Delete employee by username \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: empToDelete,\n    onChange: handleDelEmpName,\n    name: \"empToDelete\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEmpDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }, \"Delete\"), salaries.map(function (salary, index) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, \"This is the avarige salary \", salary.avg_salary, \" for department \", salary.department, \" \");\n  }));\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","axios","App","_useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","country","setCountry","handleChangeName","e","target","handleChangeCountry","handleSave","post","name","then","res","status","alert","catch","err","_useState5","_useState6","salaries","setSelary","get","data","_useState7","_useState8","years","setYears","_useState9","_useState10","enterCountry","setEnterCountry","handleChangeYears","handleChangeEnterCountry","_useState11","_useState12","filterEmp","setFilterEmp","handleFilter","concat","_useState13","_useState14","teamName","setTeamName","handleChangeTeam","_useState15","_useState16","getTeam","setGetTeam","handleTeam","_useState17","_useState18","companyName","setCompanyName","handleChangeCompanyName","_useState19","_useState20","getCompany","setGetCompany","handleCompany","_useState21","_useState22","searchCompany","setSearchCompany","handleChangeSearch","_useState23","_useState24","getSerachedCompany","setGetSearchCompany","handleCompanySearch","_useState25","_useState26","companyToUpdate","setCompanyToUpdate","handleCompanyToUpdate","_useState27","_useState28","companyNameToPut","setNameToPut","handleNameToPut","_useState29","_useState30","countryToPut","setCountryToPut","handleCountryToPut","handleCompanyPut","put","_useState31","_useState32","companyToDelete","setCompanyToDelete","handleCompanyNameToDelete","handleCompanyDetele","delete","_useState33","_useState34","getEmpsByCompany","setGetEmpsByCompany","handleEmpsByCompany","_useState35","_useState36","dissplayEmps","setDisplayEpms","handleEmpsDisplay","_useState37","_useState38","empToDelete","setEmpToDelete","handleDelEmpName","handleEmpDelete","_React$useState","_React$useState2","insertEmpPos","setInsertEmpPos","handleInsEmpPos","parseInt","_useState39","_useState40","insEmpSalary","setInsEmpSalary","handleInsEmpSal","_useState41","_useState42","insTeamId","setInsTeamId","handleInsTeamId","_useState43","_useState44","insFirstName","setInsFirstName","handleInsFirstName","String","_useState45","_useState46","insLastName","setInsLastName","handleInsLastName","_useState47","_useState48","insUsername","setInsUsername","handleInsUsername","_useState49","_useState50","insEmail","setInsEmail","handleInsEmail","_useState51","_useState52","insManagerId","setInsManagerId","handleInsManagerId","handleInsEmployee","firstName","lastName","username","email","_useState53","_useState54","companyNameToputEmp","setCompanyNameToPutEmp","handleCompNameToPutEmp","_useState55","_useState56","usernameToPutEmp","setUsernameToPutEmp","handeleUsername","handleEmpPut","oldUsername","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","emp","index","key","workers","team","team_name","team_mates","manager_id","company","emp_count","id","emps","employees","salary","avg_salary","department"],"sources":["C:/Users/dlaza/Desktop/interview project/company-teams-management/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n//import { spawn } from 'child_process';\n\nconst App = () => {\n  const [value, setValue] = useState<string>(\"\");\n  const [country, setCountry] = useState<string>(\"\");\n\n  const handleChangeName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value);\n  }\n  const handleChangeCountry = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCountry(e.target.value);\n  }\n  const handleSave = () => {\n    axios.post(\"http://localhost:4000/companies\", { name: value, country: country })\n      .then(\n        res => {\n          if (res.status === 200) {\n            alert(\"success\");\n          }\n        }\n      )\n      .catch(\n        err => { alert(\"error\") }\n      )\n  }\n\n  const [salaries, setSelary] = useState<Array<{ department: number, avg_salary: number }>>([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/avg-salary\")\n      .then(res => {\n        if (res.status === 200) {\n          setSelary(res.data)\n        }\n      })\n  }, []);\n\n  const [years, setYears] = useState<string>('');\n  const [enterCountry, setEnterCountry] = useState<string>(\"\");\n\n  const handleChangeYears = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setYears(e.target.value);\n  }\n  const handleChangeEnterCountry = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEnterCountry(e.target.value);\n  }\n\n  const [filterEmp, setFilterEmp] = useState<Array<{ workers: string, country: string }>>([]);\n\n  const handleFilter = () => {\n    axios.get(`http://localhost:4000/filter-employees?years=${years}&country=${enterCountry}`)\n      .then(res => {\n        if (res.status === 200) {\n          setFilterEmp(res.data)\n        }\n      });\n  }\n\n  const [teamName, setTeamName] = useState<string>('');\n  const handleChangeTeam = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTeamName(e.target.value);\n  }\n\n  const [getTeam, setGetTeam] = useState<Array<{ team_name: string, team_mates: string, manager_id: number }>>([]);\n  const handleTeam = () => {\n    axios.get(`http://localhost:4000/team-info?team=${teamName}`)\n      .then(\n        res => {\n          if (res.status === 200) {\n            setGetTeam(res.data);\n          }\n        })\n  }\n\n  const [companyName, setCompanyName] = useState<string>('');\n  const handleChangeCompanyName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCompanyName(e.target.value);\n  }\n\n  const [getCompany, setGetCompany] = useState<Array<{ emp_count: number, workers: string }>>([])\n  const handleCompany = () => {\n    axios.get(`http://localhost:4000/companies/employees?company=${companyName}`)\n      .then(res => {\n        if (res.status === 200) {\n          setGetCompany(res.data);\n        }\n      }).catch(err => alert('error updating'));\n  }\n  const [searchCompany, setSearchCompany] = useState<string>('');\n  const handleChangeSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchCompany(e.target.value);\n  }\n  const [getSerachedCompany, setGetSearchCompany] = useState<Array<{ id: number, name: string, country: string }>>([]);\n\n  const handleCompanySearch = () => {\n    axios.get(`http://localhost:4000/companies?companyName=${searchCompany}`)\n      .then(res => {\n        if (res.status === 200) {\n          setGetSearchCompany(res.data);\n        }\n      })\n      .catch(err => { alert(\"Company does not exist\") })\n  }\n  const [companyToUpdate, setCompanyToUpdate] = useState<string>('');\n  const handleCompanyToUpdate = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCompanyToUpdate(e.target.value);\n  }\n  const [companyNameToPut, setNameToPut] = useState<string>('');\n  const handleNameToPut = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setNameToPut(e.target.value);\n  }\n  const [countryToPut, setCountryToPut] = useState<string>('');\n  const handleCountryToPut = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCountryToPut(e.target.value);\n  }\n\n  const handleCompanyPut = () => {\n    axios.put(`http://localhost:4000/companies`, { companyName: companyToUpdate, name: companyNameToPut, country: countryToPut })\n      .then(res => {\n        if (res.status === 200) {\n          alert('success')\n        }\n      })\n      .catch(err => { alert('error') });\n  }\n\n  const [companyToDelete, setCompanyToDelete] = useState<string>('');\n  const handleCompanyNameToDelete = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCompanyToDelete(e.target.value);\n  }\n  const handleCompanyDetele = () => {\n    axios.delete(`http://localhost:4000/companies?name=${companyToDelete}`)\n      .then(\n        res => {\n          if (res.status === 200) {\n            alert('success')\n          }\n        }\n      ).catch(\n        err => { alert('error') }\n      )\n  }\n\n  const [getEmpsByCompany, setGetEmpsByCompany] = useState<string>('');\n  const handleEmpsByCompany = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setGetEmpsByCompany(e.target.value);\n  }\n  // const handleEmpsSearch=()=>{\n  //   axios.get(`http://localhost:4000/employees?name=${getEmpsByCompany}`)\n  //   .then(res=>{\n  //     if (res.status===200) {\n  //       setGetEmpsByCompany(res.data);\n  //     }\n  //   })\n  // }\n  const [dissplayEmps, setDisplayEpms] = useState<Array<{ employees: string }>>([]);\n  const handleEmpsDisplay = () => {\n    axios.get(`http://localhost:4000/employees?name=${getEmpsByCompany}`).then(\n      res => {\n        if (res.status === 200) {\n          setDisplayEpms(res.data);\n        }\n      }\n    )\n  }\n\n  const [empToDelete, setEmpToDelete] = useState<string>('');\n  const handleDelEmpName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setEmpToDelete(e.target.value);\n  }\n  const handleEmpDelete = () => {\n    axios.delete(`http://localhost:4000/employees?username=${empToDelete}`).then(res => {\n      if (res.status === 200) {\n        alert('success');\n      }\n    }).catch(err => { alert('error deleting employee') });\n  }\n\n  const [insertEmpPos, setInsertEmpPos] = React.useState<number | string>();\n  const handleInsEmpPos = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsertEmpPos(parseInt(e.target.value));\n  }\n  const [insEmpSalary, setInsEmpSalary] = useState<number>(0);\n  const handleInsEmpSal = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsEmpSalary(parseInt(e.target.value));\n  }\n  // const [insStartDate, setInsStartDate] = useState<any>();\n  // const handleInsStartDate = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   setInsStartDate((e.target.value));\n  // }\n\n  const [insTeamId, setInsTeamId] = useState<number>(0);\n  const handleInsTeamId = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsTeamId(parseInt(e.target.value));\n  }\n\n  const [insFirstName, setInsFirstName] = useState<string>('');\n  const handleInsFirstName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsFirstName(String(e.target.value));\n  }\n\n  const [insLastName, setInsLastName] = useState<string>('');\n  const handleInsLastName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsLastName(String(e.target.value));\n  }\n\n  const [insUsername, setInsUsername] = useState<string>('');\n  const handleInsUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsUsername(String(e.target.value));\n  }\n\n  const [insEmail, setInsEmail] = useState<string>(\"\");\n  const handleInsEmail = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsEmail(e.target.value);\n  }\n\n  const [insManagerId, setInsManagerId] = useState<number>(0);\n  const handleInsManagerId = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInsManagerId(parseInt(e.target.value))\n  }\n\n  const handleInsEmployee = () => {\n    axios.post(`http://localhost:4000/employees?position=${insertEmpPos}&salary=${insEmpSalary}&teamId=${insTeamId}&managerId=${insManagerId}`, { firstName: insFirstName, lastName: insLastName, username: insUsername, email: insEmail })\n      .then(res => {\n        if (res.status === 200) {\n          alert(\" seccess \")\n        }\n      })\n      .catch(err => { alert('error insert') })\n  }\n\n  const [companyNameToputEmp, setCompanyNameToPutEmp] = useState<string>('');\n  const handleCompNameToPutEmp = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setCompanyNameToPutEmp(e.target.value);\n  }\n  const [usernameToPutEmp, setUsernameToPutEmp] = useState<string>('');\n  const handeleUsername = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUsernameToPutEmp(e.target.value);\n  }\n\n  const handleEmpPut=()=>{\n    axios.put(`http://localhost:4000/employees?position=${insertEmpPos}&salary=${insEmpSalary}&teamId=${insTeamId}&managerId=${insManagerId}`, { firstName: insFirstName, lastName: insLastName, username: insUsername, email: insEmail,companyName:companyNameToputEmp, oldUsername:usernameToPutEmp })\n    .then(res=>{if (res.status===200) {\n      alert('success')\n    }}).then(err=>{alert('error')})\n  }\n\n  return (\n    <div className=\"App\">\n\n\n\n      <span className='heading'>Filter employees by country and years in the company</span>\n      <p>Country</p>\n      <input type=\"text\" value={enterCountry} onChange={handleChangeEnterCountry} name='enterCountry' />\n      <p>Years in the company</p>\n      <input type=\"text\" value={years} onChange={handleChangeYears} name='years' />\n      <button onClick={handleFilter}>filter</button>\n      {filterEmp.map((emp, index) => {\n        return (<span key={index}>This are the employees {emp.workers} from {emp.country} with {years} in the company</span>)\n      })}\n\n      <span className='heading'>Get team and manager by team name</span>\n      <p>Enter team name</p>\n      <input type=\"text\" value={teamName} onChange={handleChangeTeam} name='teamName' />\n      <button onClick={handleTeam}>filter</button>\n      {getTeam.map((team, index) => {\n        return (<span key={index}>This is team {team.team_name}: {team.team_mates} and its manager with id={team.manager_id} </span>)\n      })}\n\n      <span className='heading'>Get workers in company with atleast 6 months experiance </span>\n      <p>Enter company name</p>\n      <input type=\"text\" value={companyName} onChange={handleChangeCompanyName} name='companyName' />\n      <button onClick={handleCompany}>Enter</button>\n      {getCompany.map((company, index) => {\n        return (<span key={index}>{company.emp_count} workers:{company.workers} in {companyName}</span>)\n      })}\n\n      <span className='heading'>Search if company exists by name </span>\n      <p>Enter company name</p>\n      <input type=\"text\" value={searchCompany} onChange={handleChangeSearch} name='searchCompany' />\n      <button onClick={handleCompanySearch}>serch</button>\n      {getSerachedCompany.map((company, index) => {\n        return (<span key={index}> Serch result: id-{company.id}, name-{company.name}, country-{company.country} </span>)\n      })}\n\n      <span className='heading'>Add company</span>\n      <p>Company name</p>\n      <input type=\"text\" value={value} onChange={(e) => handleChangeName(e)} name='value' />\n      <p>Country</p>\n      <input type=\"text\" value={country} onChange={handleChangeCountry} name='country' />\n      <button onClick={handleSave}>save</button>\n\n      <span className='heading'>Update Company </span>\n      <p>Enter company name</p>\n      <input type=\"text\" value={companyToUpdate} onChange={handleCompanyToUpdate} name='companyToUpdate' />\n      <p>New name</p>\n      <input type=\"text\" value={companyNameToPut} onChange={handleNameToPut} name='companyNameToPut' />\n      <p>New country</p>\n      <input type=\"text\" value={countryToPut} onChange={handleCountryToPut} name='countryToPut' />\n      <button onClick={handleCompanyPut}>update</button>\n\n      <span className='heading'>Delete Company by name</span>\n      <input type=\"text\" value={companyToDelete} onChange={handleCompanyNameToDelete} name='companyToDelete' />\n      <button onClick={handleCompanyDetele}>Delete</button>\n\n      <span className='heading'>View all the the employees in given company </span>\n      <input type=\"text\" value={getEmpsByCompany} onChange={handleEmpsByCompany} name='getEmpsByCompany' />\n      <button onClick={handleEmpsDisplay}>view</button>\n      {dissplayEmps.map((emps, index) => {\n        return (<span key={index}>{emps.employees}</span>)\n      })}\n\n      <p>Updete epmloyee (fill the new data below in Add employees then press Update) </p>\n      <input type=\"text\" value={companyNameToputEmp} onChange={handleCompNameToPutEmp} name='companyNameToputEmp' />\n      <input type=\"text\" value={usernameToPutEmp} onChange={handeleUsername} name='usernameToPutEmp' />\n      <button onClick={handleEmpPut}>Update</button>\n\n      <span className='heading'>Add Employeee</span>\n      <p>position</p>\n      <input type=\"text\" value={insertEmpPos} onChange={handleInsEmpPos} name='insertEmpPos' />\n      <p>salary</p>\n      <input type=\"text\" value={insEmpSalary} onChange={handleInsEmpSal} name='insEmpSalary' />\n      <p>team id</p>\n      <input type=\"text\" value={insTeamId} onChange={handleInsTeamId} name='insTeamId' />\n      <p>First name</p>\n      <input type=\"text\" value={insFirstName} onChange={handleInsFirstName} name='insFirstName' />\n      <p>Last name</p>\n      <input type=\"text\" value={insLastName} onChange={handleInsLastName} name='insLastName' />\n      <p>userneme</p>\n      <input type=\"text\" value={insUsername} onChange={handleInsUsername} name='insUsername' />\n      <p>E-mail</p>\n      <input type=\"text\" value={insEmail} onChange={handleInsEmail} name='insEmail' />\n      <p>Manager id</p>\n      <input type=\"text\" value={insManagerId} onChange={handleInsManagerId} name='insManagerId' />\n      <button onClick={handleInsEmployee}>Add</button>\n\n\n\n\n      <span className='heading'>Delete employee by username </span>\n      <input type=\"text\" value={empToDelete} onChange={handleDelEmpName} name='empToDelete' />\n      <button onClick={handleEmpDelete}>Delete</button>\n\n\n      {salaries.map((salary, index) => {\n        return (<span key={index}>This is the avarige salary {salary.avg_salary} for department {salary.department} </span>)\n      })}\n\n\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAAA,IAAAC,SAAA,GACUH,QAAQ,CAAS,EAAE,CAAC;IAAAI,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAvCG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACQR,QAAQ,CAAS,EAAE,CAAC;IAAAS,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3CE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,CAAsC,EAAK;IACnEN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAC1B,CAAC;EACD,IAAMS,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIF,CAAsC,EAAK;IACtEF,UAAU,CAACE,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAC5B,CAAC;EACD,IAAMU,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBf,KAAK,CAACgB,IAAI,CAAC,iCAAiC,EAAE;MAAEC,IAAI,EAAEZ,KAAK;MAAEI,OAAO,EAAEA;IAAQ,CAAC,CAAC,CAC7ES,IAAI,CACH,UAAAC,GAAG,EAAI;MACL,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,SAAS,CAAC;MAClB;IACF,CAAC,CACF,CACAC,KAAK,CACJ,UAAAC,GAAG,EAAI;MAAEF,KAAK,CAAC,OAAO,CAAC;IAAC,CAAC,CAC1B;EACL,CAAC;EAAA,IAAAG,UAAA,GAE6BzB,QAAQ,CAAoD,EAAE,CAAC;IAAA0B,UAAA,GAAArB,cAAA,CAAAoB,UAAA;IAAtFE,QAAQ,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EAE1B3B,SAAS,CAAC,YAAM;IACdE,KAAK,CAAC4B,GAAG,CAAC,kCAAkC,CAAC,CAC1CV,IAAI,CAAC,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBO,SAAS,CAACR,GAAG,CAACU,IAAI,CAAC;MACrB;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAAC,IAAAC,UAAA,GAEmB/B,QAAQ,CAAS,EAAE,CAAC;IAAAgC,UAAA,GAAA3B,cAAA,CAAA0B,UAAA;IAAvCE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACkBnC,QAAQ,CAAS,EAAE,CAAC;IAAAoC,WAAA,GAAA/B,cAAA,CAAA8B,UAAA;IAArDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAEpC,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAI1B,CAAsC,EAAK;IACpEqB,QAAQ,CAACrB,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAC1B,CAAC;EACD,IAAMkC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAI3B,CAAsC,EAAK;IAC3EyB,eAAe,CAACzB,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EACjC,CAAC;EAAA,IAAAmC,WAAA,GAEiCzC,QAAQ,CAA8C,EAAE,CAAC;IAAA0C,WAAA,GAAArC,cAAA,CAAAoC,WAAA;IAApFE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAE9B,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB5C,KAAK,CAAC4B,GAAG,iDAAAiB,MAAA,CAAiDb,KAAK,eAAAa,MAAA,CAAYT,YAAY,EAAG,CACvFlB,IAAI,CAAC,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBuB,YAAY,CAACxB,GAAG,CAACU,IAAI,CAAC;MACxB;IACF,CAAC,CAAC;EACN,CAAC;EAAA,IAAAiB,WAAA,GAE+B/C,QAAQ,CAAS,EAAE,CAAC;IAAAgD,WAAA,GAAA3C,cAAA,CAAA0C,WAAA;IAA7CE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAC5B,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAItC,CAAsC,EAAK;IACnEqC,WAAW,CAACrC,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAC7B,CAAC;EAAA,IAAA8C,WAAA,GAE6BpD,QAAQ,CAAuE,EAAE,CAAC;IAAAqD,WAAA,GAAAhD,cAAA,CAAA+C,WAAA;IAAzGE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAC1B,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvBvD,KAAK,CAAC4B,GAAG,yCAAAiB,MAAA,CAAyCG,QAAQ,EAAG,CAC1D9B,IAAI,CACH,UAAAC,GAAG,EAAI;MACL,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBkC,UAAU,CAACnC,GAAG,CAACU,IAAI,CAAC;MACtB;IACF,CAAC,CAAC;EACR,CAAC;EAAA,IAAA2B,WAAA,GAEqCzD,QAAQ,CAAS,EAAE,CAAC;IAAA0D,WAAA,GAAArD,cAAA,CAAAoD,WAAA;IAAnDE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAMG,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIhD,CAAsC,EAAK;IAC1E+C,cAAc,CAAC/C,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAChC,CAAC;EAAA,IAAAwD,WAAA,GAEmC9D,QAAQ,CAAgD,EAAE,CAAC;IAAA+D,WAAA,GAAA1D,cAAA,CAAAyD,WAAA;IAAxFE,UAAU,GAAAD,WAAA;IAAEE,aAAa,GAAAF,WAAA;EAChC,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1BjE,KAAK,CAAC4B,GAAG,sDAAAiB,MAAA,CAAsDa,WAAW,EAAG,CAC1ExC,IAAI,CAAC,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtB4C,aAAa,CAAC7C,GAAG,CAACU,IAAI,CAAC;MACzB;IACF,CAAC,CAAC,CAACP,KAAK,CAAC,UAAAC,GAAG;MAAA,OAAIF,KAAK,CAAC,gBAAgB,CAAC;IAAA,EAAC;EAC5C,CAAC;EAAA,IAAA6C,WAAA,GACyCnE,QAAQ,CAAS,EAAE,CAAC;IAAAoE,WAAA,GAAA/D,cAAA,CAAA8D,WAAA;IAAvDE,aAAa,GAAAD,WAAA;IAAEE,gBAAgB,GAAAF,WAAA;EACtC,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAI1D,CAAsC,EAAK;IACrEyD,gBAAgB,CAACzD,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAClC,CAAC;EAAA,IAAAkE,WAAA,GACiDxE,QAAQ,CAAuD,EAAE,CAAC;IAAAyE,WAAA,GAAApE,cAAA,CAAAmE,WAAA;IAA7GE,kBAAkB,GAAAD,WAAA;IAAEE,mBAAmB,GAAAF,WAAA;EAE9C,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChC3E,KAAK,CAAC4B,GAAG,gDAAAiB,MAAA,CAAgDuB,aAAa,EAAG,CACtElD,IAAI,CAAC,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBsD,mBAAmB,CAACvD,GAAG,CAACU,IAAI,CAAC;MAC/B;IACF,CAAC,CAAC,CACDP,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEF,KAAK,CAAC,wBAAwB,CAAC;IAAC,CAAC,CAAC;EACtD,CAAC;EAAA,IAAAuD,WAAA,GAC6C7E,QAAQ,CAAS,EAAE,CAAC;IAAA8E,WAAA,GAAAzE,cAAA,CAAAwE,WAAA;IAA3DE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAC1C,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIpE,CAAsC,EAAK;IACxEmE,kBAAkB,CAACnE,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EACpC,CAAC;EAAA,IAAA4E,WAAA,GACwClF,QAAQ,CAAS,EAAE,CAAC;IAAAmF,WAAA,GAAA9E,cAAA,CAAA6E,WAAA;IAAtDE,gBAAgB,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EACrC,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIzE,CAAsC,EAAK;IAClEwE,YAAY,CAACxE,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAC9B,CAAC;EAAA,IAAAiF,WAAA,GACuCvF,QAAQ,CAAS,EAAE,CAAC;IAAAwF,WAAA,GAAAnF,cAAA,CAAAkF,WAAA;IAArDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAI9E,CAAsC,EAAK;IACrE6E,eAAe,CAAC7E,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EACjC,CAAC;EAED,IAAMsF,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAC7B3F,KAAK,CAAC4F,GAAG,oCAAoC;MAAElC,WAAW,EAAEoB,eAAe;MAAE7D,IAAI,EAAEkE,gBAAgB;MAAE1E,OAAO,EAAE+E;IAAa,CAAC,CAAC,CAC1HtE,IAAI,CAAC,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,SAAS,CAAC;MAClB;IACF,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEF,KAAK,CAAC,OAAO,CAAC;IAAC,CAAC,CAAC;EACrC,CAAC;EAAA,IAAAwE,WAAA,GAE6C9F,QAAQ,CAAS,EAAE,CAAC;IAAA+F,WAAA,GAAA1F,cAAA,CAAAyF,WAAA;IAA3DE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAC1C,IAAMG,yBAAyB,GAAG,SAA5BA,yBAAyBA,CAAIrF,CAAsC,EAAK;IAC5EoF,kBAAkB,CAACpF,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EACpC,CAAC;EACD,IAAM6F,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChClG,KAAK,CAACmG,MAAM,yCAAAtD,MAAA,CAAyCkD,eAAe,EAAG,CACpE7E,IAAI,CACH,UAAAC,GAAG,EAAI;MACL,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,SAAS,CAAC;MAClB;IACF,CAAC,CACF,CAACC,KAAK,CACL,UAAAC,GAAG,EAAI;MAAEF,KAAK,CAAC,OAAO,CAAC;IAAC,CAAC,CAC1B;EACL,CAAC;EAAA,IAAA+E,WAAA,GAE+CrG,QAAQ,CAAS,EAAE,CAAC;IAAAsG,WAAA,GAAAjG,cAAA,CAAAgG,WAAA;IAA7DE,gBAAgB,GAAAD,WAAA;IAAEE,mBAAmB,GAAAF,WAAA;EAC5C,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAI5F,CAAsC,EAAK;IACtE2F,mBAAmB,CAAC3F,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EACrC,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA,IAAAoG,WAAA,GACuC1G,QAAQ,CAA+B,EAAE,CAAC;IAAA2G,WAAA,GAAAtG,cAAA,CAAAqG,WAAA;IAA1EE,YAAY,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EACnC,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B7G,KAAK,CAAC4B,GAAG,yCAAAiB,MAAA,CAAyCyD,gBAAgB,EAAG,CAACpF,IAAI,CACxE,UAAAC,GAAG,EAAI;MACL,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBwF,cAAc,CAACzF,GAAG,CAACU,IAAI,CAAC;MAC1B;IACF,CAAC,CACF;EACH,CAAC;EAAA,IAAAiF,WAAA,GAEqC/G,QAAQ,CAAS,EAAE,CAAC;IAAAgH,WAAA,GAAA3G,cAAA,CAAA0G,WAAA;IAAnDE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAItG,CAAsC,EAAK;IACnEqG,cAAc,CAACrG,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAChC,CAAC;EACD,IAAM8G,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BnH,KAAK,CAACmG,MAAM,6CAAAtD,MAAA,CAA6CmE,WAAW,EAAG,CAAC9F,IAAI,CAAC,UAAAC,GAAG,EAAI;MAClF,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,SAAS,CAAC;MAClB;IACF,CAAC,CAAC,CAACC,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEF,KAAK,CAAC,yBAAyB,CAAC;IAAC,CAAC,CAAC;EACvD,CAAC;EAAA,IAAA+F,eAAA,GAEuCvH,KAAK,CAACE,QAAQ,EAAmB;IAAAsH,gBAAA,GAAAjH,cAAA,CAAAgH,eAAA;IAAlEE,YAAY,GAAAD,gBAAA;IAAEE,eAAe,GAAAF,gBAAA;EACpC,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAI5G,CAAsC,EAAK;IAClE2G,eAAe,CAACE,QAAQ,CAAC7G,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;EAC3C,CAAC;EAAA,IAAAqH,WAAA,GACuC3H,QAAQ,CAAS,CAAC,CAAC;IAAA4H,WAAA,GAAAvH,cAAA,CAAAsH,WAAA;IAApDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIlH,CAAsC,EAAK;IAClEiH,eAAe,CAACJ,QAAQ,CAAC7G,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;EAC3C,CAAC;EACD;EACA;EACA;EACA;EAAA,IAAA0H,WAAA,GAEkChI,QAAQ,CAAS,CAAC,CAAC;IAAAiI,WAAA,GAAA5H,cAAA,CAAA2H,WAAA;IAA9CE,SAAS,GAAAD,WAAA;IAAEE,YAAY,GAAAF,WAAA;EAC9B,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIvH,CAAsC,EAAK;IAClEsH,YAAY,CAACT,QAAQ,CAAC7G,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;EACxC,CAAC;EAAA,IAAA+H,WAAA,GAEuCrI,QAAQ,CAAS,EAAE,CAAC;IAAAsI,WAAA,GAAAjI,cAAA,CAAAgI,WAAA;IAArDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAI5H,CAAsC,EAAK;IACrE2H,eAAe,CAACE,MAAM,CAAC7H,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;EACzC,CAAC;EAAA,IAAAqI,WAAA,GAEqC3I,QAAQ,CAAS,EAAE,CAAC;IAAA4I,WAAA,GAAAvI,cAAA,CAAAsI,WAAA;IAAnDE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIlI,CAAsC,EAAK;IACpEiI,cAAc,CAACJ,MAAM,CAAC7H,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;EACxC,CAAC;EAAA,IAAA0I,WAAA,GAEqChJ,QAAQ,CAAS,EAAE,CAAC;IAAAiJ,WAAA,GAAA5I,cAAA,CAAA2I,WAAA;IAAnDE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIvI,CAAsC,EAAK;IACpEsI,cAAc,CAACT,MAAM,CAAC7H,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;EACxC,CAAC;EAAA,IAAA+I,WAAA,GAE+BrJ,QAAQ,CAAS,EAAE,CAAC;IAAAsJ,WAAA,GAAAjJ,cAAA,CAAAgJ,WAAA;IAA7CE,QAAQ,GAAAD,WAAA;IAAEE,WAAW,GAAAF,WAAA;EAC5B,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAI5I,CAAsC,EAAK;IACjE2I,WAAW,CAAC3I,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EAC7B,CAAC;EAAA,IAAAoJ,WAAA,GAEuC1J,QAAQ,CAAS,CAAC,CAAC;IAAA2J,WAAA,GAAAtJ,cAAA,CAAAqJ,WAAA;IAApDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIjJ,CAAsC,EAAK;IACrEgJ,eAAe,CAACnC,QAAQ,CAAC7G,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,IAAMyJ,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9B9J,KAAK,CAACgB,IAAI,6CAAA6B,MAAA,CAA6CyE,YAAY,cAAAzE,MAAA,CAAW+E,YAAY,cAAA/E,MAAA,CAAWoF,SAAS,iBAAApF,MAAA,CAAc8G,YAAY,GAAI;MAAEI,SAAS,EAAEzB,YAAY;MAAE0B,QAAQ,EAAEpB,WAAW;MAAEqB,QAAQ,EAAEhB,WAAW;MAAEiB,KAAK,EAAEZ;IAAS,CAAC,CAAC,CACpOpI,IAAI,CAAC,UAAAC,GAAG,EAAI;MACX,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBC,KAAK,CAAC,WAAW,CAAC;MACpB;IACF,CAAC,CAAC,CACDC,KAAK,CAAC,UAAAC,GAAG,EAAI;MAAEF,KAAK,CAAC,cAAc,CAAC;IAAC,CAAC,CAAC;EAC5C,CAAC;EAAA,IAAA8I,WAAA,GAEqDpK,QAAQ,CAAS,EAAE,CAAC;IAAAqK,WAAA,GAAAhK,cAAA,CAAA+J,WAAA;IAAnEE,mBAAmB,GAAAD,WAAA;IAAEE,sBAAsB,GAAAF,WAAA;EAClD,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAI3J,CAAsC,EAAK;IACzE0J,sBAAsB,CAAC1J,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EACxC,CAAC;EAAA,IAAAmK,WAAA,GAC+CzK,QAAQ,CAAS,EAAE,CAAC;IAAA0K,WAAA,GAAArK,cAAA,CAAAoK,WAAA;IAA7DE,gBAAgB,GAAAD,WAAA;IAAEE,mBAAmB,GAAAF,WAAA;EAC5C,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAIhK,CAAsC,EAAK;IAClE+J,mBAAmB,CAAC/J,CAAC,CAACC,MAAM,CAACR,KAAK,CAAC;EACrC,CAAC;EAED,IAAMwK,YAAY,GAAC,SAAbA,YAAYA,CAAA,EAAK;IACrB7K,KAAK,CAAC4F,GAAG,6CAAA/C,MAAA,CAA6CyE,YAAY,cAAAzE,MAAA,CAAW+E,YAAY,cAAA/E,MAAA,CAAWoF,SAAS,iBAAApF,MAAA,CAAc8G,YAAY,GAAI;MAAEI,SAAS,EAAEzB,YAAY;MAAE0B,QAAQ,EAAEpB,WAAW;MAAEqB,QAAQ,EAAEhB,WAAW;MAAEiB,KAAK,EAAEZ,QAAQ;MAAC5F,WAAW,EAAC2G,mBAAmB;MAAES,WAAW,EAACJ;IAAiB,CAAC,CAAC,CACnSxJ,IAAI,CAAC,UAAAC,GAAG,EAAE;MAAC,IAAIA,GAAG,CAACC,MAAM,KAAG,GAAG,EAAE;QAChCC,KAAK,CAAC,SAAS,CAAC;MAClB;IAAC,CAAC,CAAC,CAACH,IAAI,CAAC,UAAAK,GAAG,EAAE;MAACF,KAAK,CAAC,OAAO,CAAC;IAAA,CAAC,CAAC;EACjC,CAAC;EAED,oBACExB,KAAA,CAAAkL,aAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAIlB1L,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,sDAAoD,CAAO,eACrF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,CAAI,eACd1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE+B,YAAa;IAACqJ,QAAQ,EAAElJ,wBAAyB;IAACtB,IAAI,EAAC,cAAc;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAClG1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,sBAAoB,CAAI,eAC3B1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE2B,KAAM;IAACyJ,QAAQ,EAAEnJ,iBAAkB;IAACrB,IAAI,EAAC,OAAO;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC7E1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAE9I,YAAa;IAAAqI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAM,CAAS,EAC7C7I,SAAS,CAACiJ,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK,EAAK;IAC7B,oBAAQhM,KAAA,CAAAkL,aAAA;MAAMe,GAAG,EAAED,KAAM;MAAAZ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,yBAAuB,EAACK,GAAG,CAACG,OAAO,EAAC,QAAM,EAACH,GAAG,CAACnL,OAAO,EAAC,QAAM,EAACuB,KAAK,EAAC,iBAAe,CAAO;EACtH,CAAC,CAAC,eAEFnC,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mCAAiC,CAAO,eAClE1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iBAAe,CAAI,eACtB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE2C,QAAS;IAACyI,QAAQ,EAAEvI,gBAAiB;IAACjC,IAAI,EAAC,UAAU;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAClF1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAEnI,UAAW;IAAA0H,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAM,CAAS,EAC3ClI,OAAO,CAACsI,GAAG,CAAC,UAACK,IAAI,EAAEH,KAAK,EAAK;IAC5B,oBAAQhM,KAAA,CAAAkL,aAAA;MAAMe,GAAG,EAAED,KAAM;MAAAZ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,eAAa,EAACS,IAAI,CAACC,SAAS,EAAC,IAAE,EAACD,IAAI,CAACE,UAAU,EAAC,2BAAyB,EAACF,IAAI,CAACG,UAAU,EAAC,GAAC,CAAO;EAC9H,CAAC,CAAC,eAEFtM,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0DAAwD,CAAO,eACzF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,oBAAkB,CAAI,eACzB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEqD,WAAY;IAAC+H,QAAQ,EAAE7H,uBAAwB;IAAC3C,IAAI,EAAC,aAAa;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC/F1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAEzH,aAAc;IAAAgH,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAK,CAAS,EAC7CxH,UAAU,CAAC4H,GAAG,CAAC,UAACS,OAAO,EAAEP,KAAK,EAAK;IAClC,oBAAQhM,KAAA,CAAAkL,aAAA;MAAMe,GAAG,EAAED,KAAM;MAAAZ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEa,OAAO,CAACC,SAAS,EAAC,WAAS,EAACD,OAAO,CAACL,OAAO,EAAC,MAAI,EAACrI,WAAW,CAAQ;EACjG,CAAC,CAAC,eAEF7D,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mCAAiC,CAAO,eAClE1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,oBAAkB,CAAI,eACzB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE+D,aAAc;IAACqH,QAAQ,EAAEnH,kBAAmB;IAACrD,IAAI,EAAC,eAAe;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC9F1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAE/G,mBAAoB;IAAAsG,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAAK,CAAS,EACnD9G,kBAAkB,CAACkH,GAAG,CAAC,UAACS,OAAO,EAAEP,KAAK,EAAK;IAC1C,oBAAQhM,KAAA,CAAAkL,aAAA;MAAMe,GAAG,EAAED,KAAM;MAAAZ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,oBAAkB,EAACa,OAAO,CAACE,EAAE,EAAC,SAAO,EAACF,OAAO,CAACnL,IAAI,EAAC,YAAU,EAACmL,OAAO,CAAC3L,OAAO,EAAC,GAAC,CAAO;EAClH,CAAC,CAAC,eAEFZ,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAW,CAAO,eAC5C1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,cAAY,CAAI,eACnB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEA,KAAM;IAACoL,QAAQ,EAAE,SAAAA,SAAC7K,CAAC;MAAA,OAAKD,gBAAgB,CAACC,CAAC,CAAC;IAAA,CAAC;IAACK,IAAI,EAAC,OAAO;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACtF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,CAAI,eACd1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEI,OAAQ;IAACgL,QAAQ,EAAE3K,mBAAoB;IAACG,IAAI,EAAC,SAAS;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACnF1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAE3K,UAAW;IAAAkK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAI,CAAS,eAE1C1L,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,iBAAe,CAAO,eAChD1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,oBAAkB,CAAI,eACzB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEyE,eAAgB;IAAC2G,QAAQ,EAAEzG,qBAAsB;IAAC/D,IAAI,EAAC,iBAAiB;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACrG1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,UAAQ,CAAI,eACf1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE8E,gBAAiB;IAACsG,QAAQ,EAAEpG,eAAgB;IAACpE,IAAI,EAAC,kBAAkB;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACjG1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,aAAW,CAAI,eAClB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEmF,YAAa;IAACiG,QAAQ,EAAE/F,kBAAmB;IAACzE,IAAI,EAAC,cAAc;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC5F1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAE/F,gBAAiB;IAAAsF,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAM,CAAS,eAElD1L,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wBAAsB,CAAO,eACvD1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE0F,eAAgB;IAAC0F,QAAQ,EAAExF,yBAA0B;IAAChF,IAAI,EAAC,iBAAiB;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACzG1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAExF,mBAAoB;IAAA+E,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAM,CAAS,eAErD1L,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,8CAA4C,CAAO,eAC7E1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEiG,gBAAiB;IAACmF,QAAQ,EAAEjF,mBAAoB;IAACvF,IAAI,EAAC,kBAAkB;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACrG1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAE7E,iBAAkB;IAAAoE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAI,CAAS,EAChD5E,YAAY,CAACgF,GAAG,CAAC,UAACY,IAAI,EAAEV,KAAK,EAAK;IACjC,oBAAQhM,KAAA,CAAAkL,aAAA;MAAMe,GAAG,EAAED,KAAM;MAAAZ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEgB,IAAI,CAACC,SAAS,CAAQ;EACnD,CAAC,CAAC,eAEF3M,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,+EAA6E,CAAI,eACpF1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEgK,mBAAoB;IAACoB,QAAQ,EAAElB,sBAAuB;IAACtJ,IAAI,EAAC,qBAAqB;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC9G1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEqK,gBAAiB;IAACe,QAAQ,EAAEb,eAAgB;IAAC3J,IAAI,EAAC,kBAAkB;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACjG1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAEb,YAAa;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAM,CAAS,eAE9C1L,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAa,CAAO,eAC9C1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,UAAQ,CAAI,eACf1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEiH,YAAa;IAACmE,QAAQ,EAAEjE,eAAgB;IAACvG,IAAI,EAAC,cAAc;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACzF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,QAAM,CAAI,eACb1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEuH,YAAa;IAAC6D,QAAQ,EAAE3D,eAAgB;IAAC7G,IAAI,EAAC,cAAc;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACzF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAO,CAAI,eACd1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE4H,SAAU;IAACwD,QAAQ,EAAEtD,eAAgB;IAAClH,IAAI,EAAC,WAAW;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACnF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAU,CAAI,eACjB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEiI,YAAa;IAACmD,QAAQ,EAAEjD,kBAAmB;IAACvH,IAAI,EAAC,cAAc;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC5F1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,WAAS,CAAI,eAChB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEuI,WAAY;IAAC6C,QAAQ,EAAE3C,iBAAkB;IAAC7H,IAAI,EAAC,aAAa;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACzF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,UAAQ,CAAI,eACf1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE4I,WAAY;IAACwC,QAAQ,EAAEtC,iBAAkB;IAAClI,IAAI,EAAC,aAAa;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACzF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,QAAM,CAAI,eACb1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEiJ,QAAS;IAACmC,QAAQ,EAAEjC,cAAe;IAACvI,IAAI,EAAC,UAAU;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAChF1L,KAAA,CAAAkL,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAU,CAAI,eACjB1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAEsJ,YAAa;IAAC8B,QAAQ,EAAE5B,kBAAmB;IAAC5I,IAAI,EAAC,cAAc;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC5F1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAE5B,iBAAkB;IAAAmB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,KAAG,CAAS,eAKhD1L,KAAA,CAAAkL,aAAA;IAAMC,SAAS,EAAC,SAAS;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,8BAA4B,CAAO,eAC7D1L,KAAA,CAAAkL,aAAA;IAAOS,IAAI,EAAC,MAAM;IAACnL,KAAK,EAAE2G,WAAY;IAACyE,QAAQ,EAAEvE,gBAAiB;IAACjG,IAAI,EAAC,aAAa;IAAAgK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACxF1L,KAAA,CAAAkL,aAAA;IAAQW,OAAO,EAAEvE,eAAgB;IAAA8D,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAM,CAAS,EAGhD7J,QAAQ,CAACiK,GAAG,CAAC,UAACc,MAAM,EAAEZ,KAAK,EAAK;IAC/B,oBAAQhM,KAAA,CAAAkL,aAAA;MAAMe,GAAG,EAAED,KAAM;MAAAZ,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,6BAA2B,EAACkB,MAAM,CAACC,UAAU,EAAC,kBAAgB,EAACD,MAAM,CAACE,UAAU,EAAC,GAAC,CAAO;EACrH,CAAC,CAAC,CAGE;AAGV,CAAC;AAED,eAAe1M,GAAG"},"metadata":{},"sourceType":"module"}